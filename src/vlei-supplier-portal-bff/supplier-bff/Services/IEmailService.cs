namespace supplier_bff.Services;

public interface IEmailService
{
    Task<bool> SendEmailAsync(string to, string subject, string body);
    Task<bool> SendHtmlEmailAsync(string to, string subject, string htmlBody);
    string GenerateApplyLink(string orderId, string lei, string baseUrl);
    
    /// <summary>
    /// Generates an HTML email from a template and LLM-generated message body.
    /// </summary>
    /// <param name="llmMessageBody">The message content generated by the LLM</param>
    /// <param name="emailTitle">The title/heading for the email</param>
    /// <param name="subject">The email subject line</param>
    /// <param name="ctaText">Optional call-to-action button text</param>
    /// <param name="ctaUrl">Optional call-to-action button URL</param>
    /// <returns>The complete HTML email content</returns>
    Task<string> GenerateHtmlEmailFromLlmMessageAsync(
        string llmMessageBody, 
        string emailTitle, 
        string subject,
        string? ctaText = null, 
        string? ctaUrl = null);
    
    /// <summary>
    /// Generates and saves an HTML email to the EmailOutput folder.
    /// </summary>
    /// <param name="llmMessageBody">The message content generated by the LLM</param>
    /// <param name="emailTitle">The title/heading for the email</param>
    /// <param name="subject">The email subject line</param>
    /// <param name="fileName">Optional custom filename (without extension)</param>
    /// <param name="ctaText">Optional call-to-action button text</param>
    /// <param name="ctaUrl">Optional call-to-action button URL</param>
    /// <returns>The full path to the saved email file</returns>
    Task<string> GenerateAndSaveEmailAsync(
        string llmMessageBody,
        string emailTitle,
        string subject,
        string? fileName = null,
        string? ctaText = null,
        string? ctaUrl = null);
    
    /// <summary>
    /// Generates a simple notification email and saves it to the EmailOutput folder.
    /// </summary>
    /// <param name="title">Notification title</param>
    /// <param name="message">Notification message</param>
    /// <param name="icon">Emoji or icon character</param>
    /// <param name="ctaText">Optional call-to-action button text</param>
    /// <param name="ctaUrl">Optional call-to-action button URL</param>
    /// <param name="fileName">Optional custom filename (without extension)</param>
    /// <returns>The full path to the saved email file</returns>
    Task<string> GenerateAndSaveNotificationEmailAsync(
        string title,
        string message,
        string icon = "ðŸ“§",
        string? ctaText = null,
        string? ctaUrl = null,
        string? fileName = null);
}