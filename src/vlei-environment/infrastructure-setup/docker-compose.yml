# Docker compose file for KERI JupyterLab environment

# image tags
x-vlei-image: &vlei-image
  image: gleif/vlei:1.0.0
x-witness-demo-image: &witness-demo-image
  image: gleif/keri:1.2.9
x-keria-image: &keria-image
  image: gleif/keria:0.3.0
x-sally-image: &sally-image
  image: gleif/sally:1.0.2

x-healthcheck: &healthcheck
  interval: 15s
  timeout: 5s
  retries: 3
  start_period: 2s

# Define the custom network
networks:
  default:
    external: false
    name: keri_network

volumes:
  direct-sally-vol:

services:
  # JupyterLab Service
  # jupyter:
  #   environment:
  #     - PYTHONWARNINGS=ignore::SyntaxWarning # Ignore regular expression syntax warning  
  #   build:
  #     context: ./jupyter # Path to the directory containing the Dockerfile
  #   container_name: jupyter_lab_service
  #   healthcheck:
  #     test: curl -f curl http://127.0.0.1:8888/api/status
  #     <<: *healthcheck
  #   ports:
  #     - "8888:8888"
  #   volumes:
  #     # Mount the local 'notebooks' directory into the container's working directory
  #     # This allows you to edit notebooks locally and see changes reflected live
  #     # Any notebooks placed in ./jupyter/notebooks locally will appear in JupyterLab
  #     - ./jupyter/notebooks:/app/notebooks
  #     # The Notebooks in .markdown will be available here
  #     - ./markdown:/app/markdown
  #     # Utility scripts for JupyterLab
  #     - ./jupyter/utils:/app/utils
  #   # Ensure it restarts if it crashes
  #   restart: unless-stopped

  vlei-server:
    <<: *vlei-image
    environment:
      - PYTHONUNBUFFERED=1 # Ensure output is logged in real-time
      - PYTHONIOENCODING=UTF-8 # Ensure consistent logging encoding
    volumes:
      - ./jupyter/notebooks/config/schemas:/vLEI/schema
    command: [ 'vLEI-server', '-s', '/vLEI/schema', '-c', '/vLEI/schema', '-o', '/vLEI/schema', '--loglevel', 'INFO' ]
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:7723/oobi/EBfdlu8R27Fbx-ehrqwImnK-8Cm79sqbAQ4MmvEAYqao" ]
      <<: *healthcheck
    ports:
      - "7723:7723"

  witness-demo:
    <<: *witness-demo-image
    environment:
      - PYTHONUNBUFFERED=1 # Ensure output is logged in real-time
      - PYTHONIOENCODING=UTF-8 # Ensure consistent logging encoding
      - PYTHONWARNINGS=ignore::SyntaxWarning # Ignore regular expression syntax warning
    healthcheck:
      test: python3 -c "import urllib.request; urllib.request.urlopen('http://127.0.0.1:5642/oobi')"
      <<: *healthcheck
    command: witness demo --loglevel INFO
    volumes:
      - ./jupyter/notebooks/config/witness-demo-docker:/keripy/scripts/keri/cf/main
    ports:
      - "5642:5642" # witness named wan
      - "5643:5643" # witness named wil
      - "5644:5644" # witness named wes
      - "5645:5645" # witness named wit
      - "5646:5646" # witness named wub
      - "5647:5647" # witness named wyz
    depends_on:
      vlei-server:
        condition: service_healthy

  keria:
    <<: *keria-image
    environment:
      - KERI_AGENT_CORS=True # Enable CORS for the KERI agent
      - PYTHONUNBUFFERED=1 # Ensure output is logged in real-time
      - PYTHONIOENCODING=UTF-8 # Ensure consistent logging encoding
    volumes:
      - ./jupyter/notebooks/config/keria/keria-docker.json:/keria/config/keri/cf/keria.json
    command: --config-dir /keria/config --config-file keria --name agent --loglevel INFO
    healthcheck:
      test: [ "CMD", "wget", "--spider", "--tries=1", "--no-verbose", "http://127.0.0.1:3902/spec.yaml" ]
      <<: *healthcheck
    ports:
      - "3901:3901"
      - "3902:3902"
      - "3903:3903"
    entrypoint: [ 'keria', 'start', '--config-dir', '/keria/config', '--config-file', 'keria', '--name', 'agent', '--loglevel', 'INFO' ]
    depends_on:
      vlei-server:
        condition: service_healthy
      witness-demo:
        condition: service_healthy


  # Sample Webhook that will receive IPEX credential presentation bodies as JSON from Sally
  hook:
    stop_grace_period: 1s
    <<: *sally-image
    environment:
      - PYTHONUNBUFFERED=1 # Ensure output is logged in real-time
      - PYTHONIOENCODING=UTF-8 # Ensure consistent logging encoding
      - PYTHONWARNINGS=ignore::SyntaxWarning
    # volumes:
    healthcheck:
      test: [ "CMD", "wget", "--spider", "--tries=1", "--no-verbose", "http://127.0.0.1:9923/health" ]
      <<: *healthcheck
    ports:
      - "9923:9923"
    entrypoint: [ 'sally', 'hook', 'demo' ]

  direct-sally:
    stop_grace_period: 1s
    <<: *sally-image
    # Var values defined in deploy.sh file
    environment: 
      - PYTHONUNBUFFERED=1 # Ensure output is logged in real-time
      - PYTHONIOENCODING=UTF-8 # Ensure consistent logging encoding
      - PYTHONWARNINGS=ignore::SyntaxWarning
      - DIRECT_PORT=9823
      - GEDA_PRE=${GEDA_PRE}
    volumes:
      - ./direct-sally/keri/cf/direct-sally.json:/sally/conf/keri/cf/direct-sally.json
      - ./direct-sally/sally-incept-no-wits.json:/sally/conf/sally-incept-no-wits.json
      - ./direct-sally/entry-point.sh:/sally/entry-point.sh
      - direct-sally-vol:/usr/local/var/keri
    healthcheck:
      test: [ "CMD", "wget", "--spider", "--tries=1", "--no-verbose", "http://127.0.0.1:9823/health" ]
      <<: *healthcheck
    ports:
      - 9823:9823
    entrypoint: "/sally/entry-point.sh"
    depends_on:
      vlei-server:
        condition: service_healthy